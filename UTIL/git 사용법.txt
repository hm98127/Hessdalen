GIT 사용법

1. git bash 접속

2. $ git -> 사용법을 보여준다.

3. $ git --version -> 사용하는 git의 버전을 보여준다.

4. $ git config --global user.name github아이디 -> 처음 등록할때 사용하는 명령어 다음부터 안써도 됨!

5. $ git config --global user.eamil github이메일 -> 위와 마찬가지로 처음 등록할때 사용하는 명령어 다음부터 안써도 됨!

6. $ git clone github코드 주소 -> pull을 써도 되지만 그냥 자료를 다운받고 싶다면 클론이용.

7. 파일을 추가

#) dir, cd 등 일반 콘솔 명령어로 디렉토리 이동이나 내용을 확인 가능하다.

8. $ git status -> 현재 상태의 git 명령어가 어떤지 확인하거나 해야할 명령어를 알려주는 명령어이다. 안쳐도 됨!

9. $ git add 추가한 파일(확장자도 붙여야함) -> 해당 저장소에 파일을 추가했다면 add 명령어로 로컬저장소에 파일이 추가했다는 명령을 내려야함!

#) $ git add . -> 수정된 파일이 많거나 넣어야 할 파일이 많다면 .을 하면 모든 파일이 add 됨!

10. $ git reset 추가한 파일(확장도 붙여야함) -> add 명령어로 추가한 명령을 취소시키고 싶으면 reset 명령어를 이용하면 됨!

11. $ git commit -m "넣고 싶은 메시지" -> 이제 로컬저장소에 저장을 하고 싶으면 commit -m(은 메시지의 줄임말) 다음 "" 안에 넣고 싶으 메시지를 넣으면 됨!

12. $ git push -> 원격저장소 즉 github에 파일을 올리고 싶으면 push명령어를 하면된다.

13. $ git pull -> 누군가 파일을 올렸거나 하면 동기화 시켜줄때 사용 하는 명령어!

GIT TIP!

1. git add한 파일을 수정하면 git add로 다시 수정된 내용을 넣을수 있다.

하지만 수정된 내용을 무시하고 싶다면! 

$ git checkout -- 파일 이름(확장자도 붙여야함) -> 수정한 내용을 없애고 전 내용으로 돌아간다.

2. $ git commit -m "추가할 메시지" 후 잘못된 메시지를 넣었다면

$ git commit --amend -> 명령어로 수정할수 있다. 수정 에디터로 들어간뒤 a를 누르면 수정이 가능하다.

나갈때는 esc 버튼 클릭후 :wq! 을 입력하면 저장후 나가기가 됨

3. $ git log -> 자신이 commit 한 내용들을 볼수있다. 너무 길어서 나가고 싶으면 q를 입력하면 빠져나올수 있다.

git log 후 commit된 코드로 되돌아가기를 할수있다.

되돌아가기를 할때는

4. $ git reset --hard, soft, mixed commit코드 

hard는 커밋 해제 + 스테이지 해제 + 변경 사항 삭제!

soft는 커밋을 취소 그리고 변경 사항이 준비됨!

mixed는 기본값이다. 위의 git 사용법이 기본값이다.

5. 되돌아기후 $ git push 를 하면 오류가 뜸 해결방법은 

$ git push -f -> 강제로 가능하다.
